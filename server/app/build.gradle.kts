/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.10.2/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    application
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation(libs.junit.jupiter)

    testRuntimeOnly("org.junit.platform:junit-platform-launcher")

    compileOnly("org.projectlombok:lombok:1.18.36")
    annotationProcessor("org.projectlombok:lombok:1.18.36")

    testCompileOnly("org.projectlombok:lombok:1.18.36")
    testAnnotationProcessor("org.projectlombok:lombok:1.18.36")

    implementation("io.javalin:javalin:6.5.0")
    implementation("org.slf4j:slf4j-simple:2.0.16")
    implementation("io.carml:carml-engine:0.4.11")
    implementation("io.carml:carml-logical-source-resolver-jsonpath:0.4.11")
    implementation("org.eclipse.rdf4j:rdf4j-model:5.1.2")
    implementation("org.eclipse.rdf4j:rdf4j-rio-api:5.1.2")
    implementation("org.eclipse.rdf4j:rdf4j-rio-ntriples:5.1.0")
    implementation("org.apache.commons:commons-text:1.13.0")
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

application {
    mainClass = "app.Main"
}

tasks.named<Test>("test") {
    useJUnitPlatform()
}
